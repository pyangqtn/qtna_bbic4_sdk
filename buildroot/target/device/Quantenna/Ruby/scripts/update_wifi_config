#! /bin/sh

# only applicable for Quantenna reference boards

default_persistent_path=/mnt/jffs2
config_file=wireless_conf.txt
base_scripts="/scripts"

if [ $# -lt 3 ]
then
    echo "$0 requires a VAP (e.g. wifi0), a parameter name and its (updated) value"
    exit 1
fi

# The VAP is for future expansion, in case multiple VAPs each have their own configuration
# Not used currently

vap=$1
parameter_name=$2
parameter_value=$3

path_to_persistence=`call_qcsapi -u get_file_path security`
error_check=`echo $path_to_persistence | cut -b 1-13`
if [ "$error_check" == "QCS API error" ]
then
    config_path=${default_persistent_path}/${config_file}
else
    config_path=${path_to_persistence}/${config_file}
fi

$base_scripts/update_config_utility check ${config_path}
if [ $? -ne 0 ]
then
    touch $config_path
fi

scratch_pad=`$base_scripts/update_config_utility begin ${config_path}`

# awk script does the real work.
# Use the Field Separator concept (FS) to mimic and enforce PHP syntax.
# END block is entered if the configuration file is empty.
#      Verify output string is still "" befor proceeding.
# Notice the configuration file is expected to have exactly 1 line.
# This is enforced by calling exit at the end of the per-line block
# (main block of the awk program.

cat $config_path | awk -v parameter_name=$parameter_name -v parameter_value=$parameter_value '
BEGIN {
    FS="&"
    output_string=""
    found_entry=0
    update_entry=0
}
{
    for (iter = 1; iter <= NF; iter++)
    {
        pvpair=$iter
        if (pvpair == "") continue;

        split( pvpair, fields, "=" )
        iter_2=0
        for (var in fields)
        {
             if (iter_2 == 0)
             {
                 pname=fields[ var ]
                 if (fields[ var ] == parameter_name)
                 {
                     found_entry=1
                     update_entry=1
		 }
             }

             if (iter_2 == 1 && update_entry != 0)
             {
                  pvpair=pname "=" parameter_value
             }

	     iter_2++
        }

        output_string=output_string pvpair "&"
        update_entry=0
    }

    if (found_entry == 0)
    {
        output_string=output_string parameter_name "=" parameter_value "&"
    }

    print output_string
    exit 0
}
END
{
    if (output_string == "")
    {
        output_string=parameter_name "=" parameter_value "&"
        print output_string
    }
}
' >$scratch_pad

$base_scripts/update_config_utility apply ${config_path}
