#!/bin/sh

vbr_name_pref="vbr"
vbr_dirs="/sys/devices/virtual/net/vbr*/"

cmd=$1
interface=$2
vid=$3
add=$4
tag=$5
default=$6


usage()
{
	echo "Usage:"
	echo "	qvlan {bind | unbind | access | trunk} <wifi interface>"
	echo "    <vlan id> {add | del} {tag | untag} {default | none}"
	echo "	or qvlan {enable | disable | reset | drop_stag | undrop_stag} <wifi interface>"
	echo ""
}

vlan_config()
{
	sysfs_net_br_iface_path="/sys/class/net/$interface/bridge/"

	# Create/remove vlan interface if the interface is a bridge interface
	if [ -d "$sysfs_net_br_iface_path" ]
	then
		if [ "$add" == "add" ]
		then
			vconfig add $interface $vid
		elif [ "$add" == "del" ]
		then
			vconfig rem $interface.$vid
		fi

		return $?
	fi

	echo "set vlan $interface $cmd $vid $add $tag $default" >/sys/devices/qdrv/control
	return $?
}

set_default_priority()
{
	echo "set vlan $interface $cmd $vid" >/sys/devices/qdrv/control
	return $?
}

reset()
{
	echo "set vlan $interface reset" >/sys/devices/qdrv/control
	return $?
}

enable()
{
	echo "set vlan enable" >/sys/devices/qdrv/control
}

disable()
{
	echo "set vlan disable" >/sys/devices/qdrv/control
}

drop_stag()
{
	echo "set vlan drop_stag" >/sys/devices/qdrv/control
}

undrop_stag()
{
	echo "set vlan undrop_stag" >/sys/devices/qdrv/control
}

if [ "$cmd" = "reset" ]
then
	reset
elif [ "$cmd" = "enable" ]
then
	enable
elif [ "$cmd" = "disable" ]
then
	disable
elif [ "$cmd" = "default_priority" ]
then
	set_default_priority
elif [ "$cmd" = "access" ] || [ "$cmd" = "trunk" ]
then
	vlan_config
elif [ "$cmd" = "drop_stag" ]
then
	drop_stag
elif [ "$cmd" = "undrop_stag" ]
then
	undrop_stag
else
	usage
fi
