#!/bin/sh
start_mode=$2
auc_fw_type=$4
calstate=3

if [ "$start_mode" == "cal" ] ; then
	calstate=1
fi

echo "Loading modules"
modprobe qtn_debug
modprobe i2cbus
modprobe qtsens
modprobe pm_interval
modprobe wlan
modprobe fwt_if
modprobe fwt_ctrl
modprobe auc_fw
modprobe qdrv tqe_sem_en=$3 calstate=$calstate || set_sys_status wifi
modprobe wlan_xauth || set_sys_status wifi
modprobe wlan_ccmp || set_sys_status wifi
modprobe wlan_tkip || set_sys_status wifi

#if I2C adapter is not used it will be removed
rmmod i2cbus

cp /scripts/dc_iq.cal /tmp
cp /scripts/txpower.cal /tmp
if [ "$start_mode" == "runtime" ] ; then
	if [ -f /etc/firmware/qtn_driver.${1}.0.bin ] ; then
		echo "Loading MuC driver (qtn_driver.${1}.0.bin)"
		echo "set mucfw qtn_driver.${1}.0.bin" > /sys/devices/qdrv/control
	else
		echo "*******************************************"
		echo "Defaulting to cal driver (unknown driver ${1})"
		echo "*******************************************"
		echo "set mucfw qtn_driver.cal_ruby.0.bin" > /sys/devices/qdrv/control
	fi
else
	echo "Calibration mode"
fi

if [ -z "$auc_fw_type" ]; then
	auc_fw_type="default"
fi
auc_fw_filename="auc_driver.${auc_fw_type}.0.bin"

if [ ! -f "/etc/firmware/$auc_fw_filename" ]; then
	echo "ERROR: AuC firmware file not found: '$auc_fw_filename'!"
	auc_fw_filename="auc_driver.default.0.bin"
	echo "Falling back to 'default' AuC FW type: '$auc_fw_filename'"
fi

if [ "$auc_fw_type" == "nomu" ]; then
	echo "set fw_no_mu 1" > /sys/devices/qdrv/control
fi

echo "set aucfw $auc_fw_filename" > /sys/devices/qdrv/control
echo "set mucfw qtn_driver.${1}.0.bin" > /sys/devices/qdrv/control
echo "set dspfw rdsp_driver.0.bin" > /sys/devices/qdrv/control
echo "clearsram" > /sys/devices/qdrv/control

if [ -f /mnt/jffs2/qos_merge ]
then
	qm=`cat /mnt/jffs2/qos_merge`
	echo "set muc_qos_q_merge $qm" > /sys/devices/qdrv/control
fi

if [ -f /mnt/jffs2/check_fcs_corruption ]
then
	fc=`cat /mnt/jffs2/check_fcs_corruption`
	echo "set check_fcs_corruption $fc" > /sys/devices/qdrv/control
fi

/scripts/load_cust_feat_cred

# capture iwevents, send to syslog
iwevent --syslog --pktlogger &
