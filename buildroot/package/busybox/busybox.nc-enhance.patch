--- ./networking/nc.c.orig	2015-10-29 18:06:16.895507692 +0800
+++ ./networking/nc.c	2015-10-29 17:11:54.106675424 +0800
@@ -30,10 +30,13 @@
 	int cfd = 0;
 	unsigned lport = 0;
 	SKIP_NC_SERVER(const) unsigned do_listen = 0;
+	SKIP_NC_SERVER(const) unsigned stay_listen = 0;
 	SKIP_NC_EXTRA (const) unsigned wsecs = 0;
 	SKIP_NC_EXTRA (const) unsigned delay = 0;
+	SKIP_NC_EXTRA (const) int count = -1;
 	SKIP_NC_EXTRA (const int execparam = 0;)
 	USE_NC_EXTRA  (char **execparam = NULL;)
+	USE_NC_SERVER  (struct in_addr ip_listen; ip_listen.s_addr = INADDR_ANY;)
 	len_and_sockaddr *lsa;
 	fd_set readfds, testfds;
 	int opt; /* must be signed (getopt returns -1) */
@@ -42,16 +45,22 @@
 		/* getopt32 is _almost_ usable:
 		** it cannot handle "... -e prog -prog-opt" */
 		while ((opt = getopt(argc, argv,
-		        "" USE_NC_SERVER("lp:") USE_NC_EXTRA("w:i:f:e:") )) > 0
+		        "" USE_NC_SERVER("lkb:p:") USE_NC_EXTRA("w:i:f:e:c:") )) > 0
 		) {
 			if (ENABLE_NC_SERVER && opt=='l')
 				USE_NC_SERVER(do_listen++);
+			else if (ENABLE_NC_SERVER && opt=='k')
+				USE_NC_SERVER(stay_listen = 1);
+			else if (ENABLE_NC_SERVER && opt=='b')
+				USE_NC_SERVER(inet_aton(optarg, &ip_listen));
 			else if (ENABLE_NC_SERVER && opt=='p')
 				USE_NC_SERVER(lport = bb_lookup_port(optarg, "tcp", 0));
 			else if (ENABLE_NC_EXTRA && opt=='w')
 				USE_NC_EXTRA( wsecs = xatou(optarg));
 			else if (ENABLE_NC_EXTRA && opt=='i')
 				USE_NC_EXTRA( delay = xatou(optarg));
+			else if (ENABLE_NC_EXTRA && opt=='c')
+				USE_NC_EXTRA( count = xatou(optarg));
 			else if (ENABLE_NC_EXTRA && opt=='f')
 				USE_NC_EXTRA( cfd = xopen(optarg, O_RDWR));
 			else if (ENABLE_NC_EXTRA && opt=='e' && optind <= argc) {
@@ -105,6 +114,7 @@
 			sfd = xsocket_stream(&lsa);
 			if (lport)
 				set_nport(lsa, htons(lport));
+			USE_NC_SERVER(memcmp(&lsa->u.sin.sin_addr, &ip_listen, sizeof(ip_listen));)
 			setsockopt_reuseaddr(sfd);
 			xbind(sfd, &lsa->u.sa, lsa->len);
 			xlisten(sfd, do_listen); /* can be > 1 */
@@ -121,7 +131,7 @@
 			cfd = accept(sfd, NULL, 0);
 			if (cfd < 0)
 				bb_perror_msg_and_die("accept");
-			if (!execparam)
+			if (!execparam && !stay_listen)
 				close(sfd);
 		} else {
 			cfd = create_and_connect_stream_or_die(argv[0],
@@ -182,9 +192,16 @@
 			if (FD_ISSET(fd, &testfds)) {
 				nread = safe_read(fd, iobuf, sizeof(iobuf));
 				if (fd == cfd) {
-					if (nread < 1)
+					if (nread < 1) {
+						if (stay_listen) {
+							close(cfd);
+							goto accept_again;
+						}
 						exit(0);
+					}
 					ofd = STDOUT_FILENO;
+					if (count > 0)
+						--count;
 				} else {
 					if (nread<1) {
 						// Close outgoing half-connection so they get EOF, but
@@ -196,6 +213,7 @@
 				}
 				xwrite(ofd, iobuf, nread);
 				if (delay > 0) sleep(delay);
+				if (count == 0) exit(0);
 			}
 		}
 	}
